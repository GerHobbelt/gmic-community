
#@cli svg2wheelie : "file",_resolution,_wheeliecount
svg2wheelie:
   check "isfile('${1}') && isint(${2=10}) && ${2}>0 && isint(${3=16}) && ${3}>2"
   fname=$1
   res=$2
   wcnt=$3
   normdiv=1
   svg2plots $fname,$res
   split. y
   fft[-2,-1]
   append[-2,-1] c
   name. spectral
   div[spectral] {w#$spectral}
   mkwheelielist[spectral] $wcnt
   wlist=${}
   rm.

#@cli mkwheelielist : wheelie_count
mkwheelielist :
   name. spectral
   check isint(${1=16})" && "${1}>2
   wcnt=$1
   -set[spectral] 0,0,0,0,0
   -set[spectral] 0,0,0,0,1
   -input 0 :: coefficients -d
   -eval ">
           wc=get('wcnt',0,0);
           sz=0;
           repeat(2*wc,m,
                    sw=w#$spectral;
                    if(
                        m%2==0,
                        j=int(m/2)+1;
                        o=j,
                        j=sw-(int(m/2)+1);
                        o=-(int(m/2)+1)
                      );
                    rad=norm2(I(#$spectral,j,0));
                    if(rad>0,
                          ang=atan2(i(#$spectral,j,0,0,1),i(#$spectral,j,0,0,0));
                          ang=rad2deg(ang);
                          ang<0?ang=ang+360;
                          da_push(#$coefficients,[rad,ang,o])
		      );
                 );
	   sz=da_size(#$coefficients);
           repeat(sz-1,k,
                        I[#$coefficients,sz-1-k]=[
                                                  i(#$coefficients,0,sz-1-k,0,0),
                                                  i(#$coefficients,0,sz-2-k,0,1)-i(#$coefficients,0,sz-1-k,0,1),
                                                  i(#$coefficients,0,sz-2-k,0,2)-i(#$coefficients,0,sz-1-k,0,2)
                                                 ];
                        if(i(#$coefficients,0,sz-1-k,0,1)<0,i(#$coefficients,0,sz-1-k,0,1)+=360);
                        print(I[#$coefficients,sz-1-k])
                 );
           print(I[#$coefficients,0])
         "	
   # Caller obtains the argument list for a wheelie command from
   # the return string vector .
   -d
   -status $wheelie

#@cli svg2plots : "file",_resolution
#@cli Retrieve the first path in the SVG 1.1 $file argument and render it at
#@cli the indicated resolution, a power of 2: $_resolution = 8 → 2⁸ → 256.
#@cli Resolution defaults to 8; paths are plotted with 256 points.
svg2plots:
   check "isfile('${1}') && isint(${2=10}) && ${2}>0"

   # Python helper writes plots to a text file. We furnish a temporary.
   -file_rand
   outfile=${}
   fname=$1
   res=$2

   # Assume a script subdirectory containing python helper
   # See svghelper.py for details.

   helpercommand="python scripts/svghelper.py \
                  --normalize                 \
                  --density "$res"            \
                  --output "$outfile" "$fname

   -exec $helpercommand
   -if !isfile('$outfile')
      error "Could not process "$outfile"!"
   -fi
   -input_csv $outfile,0
   -delete $outfile
   -permute. yxzc
