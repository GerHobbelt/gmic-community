# check (+)
%% x "mkdir -p img" %%
%% m scripts/roses.gmic roses 4096,1,0,-11,1,0,-7,1,0,5 expand_xy[canvas] 16 -dilate_circ[canvas] 16 *[canvas] -1 label[canvas] *[canvas] {255/iM} -map[canvas] hocuspocus r2dx[canvas] 300,5 o. img/arabesque.png rm %%
|![frontimage](img/arabesque.png)|''-check'' takes an expression argument and is silent if the expression is true, allowing the script to proceed, but raises an exception if the expression is false; it reproduces the expression in its exception message, indicating that it resolves to __False__.\nWhile it may appear anywhere, G'MIC scripts almost always harness `-check` to test command arguments.\nPrior to G'MIC 2.6, `-check` could take a file system object and test for its existence. That is no longer supported. Use the mathematical expression function `isfile()` instead:\n`gmic check "isfile('/this/doesnt/exist.here')"`\nConsider using ''error'' if some control over the error message is desired. `-error` unconditionally throws exceptions, so it is combined with conditional commands to emulate `-check` in a less compact way.  

## Examples

## Drawing arabesques

# Command reference

===
"""
gmic -h check
"""
===
"""
date -u
"""
