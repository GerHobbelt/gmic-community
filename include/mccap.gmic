#@gmic
#
#  File        : mccap.gmic
#                ( G'MIC commands file )
#
#  Description : Personal G'MIC filters done by McCap/pixls.us.
#
#  Copyright   : McCap
#                ( https://discuss.pixls.us/u/McCap )
#
#  License     : CeCILL v2.0
#                ( http://cecill.info/licences/Licence_CeCILL_V2-en.html )
#
#  This software is governed by the CeCILL  license under French law and
#  abiding by the rules of distribution of free software.  You can  use,
#  modify and/ or redistribute the software under the terms of the CeCILL
#  license as circulated by CEA, CNRS and INRIA at the following URL
#  "http://cecill.info".
#
#  As a counterpart to the access to the source code and  rights to copy,
#  modify and redistribute granted by the license, users are provided only
#  with a limited warranty  and the software's author,  the holder of the
#  economic rights,  and the successive licensors  have only  limited
#  liability.
#
#  In this respect, the user's attention is drawn to the risks associated
#  with loading,  using,  modifying and/or developing or reproducing the
#  software by the user in light of its specific status of free software,
#  that may mean  that it is complicated to manipulate,  and  that  also
#  therefore means  that it is reserved for developers  and  experienced
#  professionals having in-depth computer knowledge. Users are therefore
#  encouraged to load and test the software's suitability as regards their
#  requirements in conditions enabling the security of their systems and/or
#  data to be ensured and,  more generally, to use and operate it in the
#  same conditions as regards security.
#
#  The fact that you are presently reading this means that you have had
#  knowledge of the CeCILL license and that you accept its terms.
#

#@gui _<b>Testing</b>
#---------------------

#@gui <i>McCap</i>
#------------------

#@gui Hue Overlay Masks : fx_hue_overlay_masks, fx_hue_overlay_masks_preview(0)
#@gui : note = note{"This plugin creates RGB hue masks. They are be exported in overlay mode into Gimp. Try each one to see how it changes your picture. Alternatively you can use them as masks to select regions based on hue."}
#@gui : sep = separator()
#@gui : Stretch Constrast = bool(0)
#@gui : sep = separator(), Preview type = choice(5,"Full","Forward horizontal","Forward vertical","Backward horizontal","Backward vertical","Duplicate top","Duplicate left","Duplicate bottom","Duplicate right")
#@gui : sep = separator(), note = note("More details <a href="https://discuss.pixls.us/t/hue-overlay-masks-my-first-filter">here</a>.")
#@gui : sep = separator(), note = note("<small>Author: <i><a href="https://discuss.pixls.us/u/McCap">McCap/pixls.us</a></i>.      Latest update: <i>2017/09/02</i>.</small>")
fx_hue_overlay_masks :
  100%,100%,1,1,"R#0/2-(G#0+B#0)/4+128"
  100%,100%,1,1,"G#0/2-(R#0+B#0)/4+128"
  100%,100%,1,1,"B#0/2-(R#0+G#0)/4+128"
  =>... "name(Red), mode(overlay)"
  =>.. "name(Green),mode(overlay)"
  =>. "name(Blue),mode(overlay)"
  if $1==1
    if iM#1-128>128-im#1
      f[1] '(i-128)/abs(iM-128)*128+128'
    else
      f[1] '(i-128)/abs(im-128)*128+128'
    fi
    if iM#2-128>128-im#2
      f[2] '(i-128)/abs(iM-128)*128+128'
    else
      f[2] '(i-128)/abs(im-128)*128+128'
    fi
    if iM#3-128>128-im#3
      f[3] '(i-128)/abs(iM-128)*128+128'
    else
      f[3] '(i-128)/abs(im-128)*128+128'
    fi
  fi
  move[1] 0
  move[2] 1
  move[3] 2

fx_hue_overlay_masks_preview :
  fx_hue_overlay_masks $*
  r2dx 50% to[0] "Red" to[1] "Green" to[2] "Blue" to[3] "Original"
  to_rgba frame 1,1,0,0,0,255 frame 3,3,255 append_tiles ,

# Local Variables:
# mode: sh
# End:
#
# (End of G'MIC custom commands)
